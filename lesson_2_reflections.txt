What happens when you initialize a repository? Why do you need to do it?

To initialize a new repository we use the command:

    $ git init

inside the directory that we want to use to create the repository.
When we initialize the repository a directory nemed ".git" containing the
metafiles used by git is greated.

--------------------------------------------------------------------------------

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The working directory contains the files fo the project on which I will work
(edit with a text editor). The repository contains all the versions of the files
that have been commited and the metadata used by git to manage the versons. The
staging area is a temporary area where I put the modification that I want to be
commited. It allows to select with more granularity which part of the working
directory I want to control by git.

--------------------------------------------------------------------------------

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
